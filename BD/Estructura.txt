>>>USUARIO<<<
ID es autoincrementable.

Nombre corresponde al nickname, maximo 20 caracteres y no
permite espacios.

Apellidos de varchar(60).

Clave es la contraseña, minimo 8 caracteres y solo permite
letras y numeros (no simbolos).

Correo es algun correo, debe corroborar que lleve al menos 
una arroba.

Telefono, campo de 12 valores tipo varchar
Valor predeterminado: 664-000-0000

TipoUsuario es el tipo de usuario, este campo solo ingresa
S,A o R.
>>>USUARIO<<<


>>>TIPOUSUARIO<<<
ID es S,A o R. Por el momento solo existen 3 campos en este
tabla:
-> S	Superusuario	1
-> A	Administrador	2
-> R	Recepcionista	3
>>>TIPOUSUARIO<<<



Unico superusuario por el momento:
Nickname: Usuario
Clave: derechos
Correo: derechoscopio@gmail.com
Tipousuario: S

>>>>>SENTENCIAS SQL PARA LA CONSULTA DE DATOS AL CREAR RESERVACION<<<<<< (Sprint Administrador)
La primer sentencia es la principal que se ejecutara al entrar a la pantalla de "Reservaciones/Consultar". Ordenada por fecha de creacion de la mas reciente a la mas vieja.
--Reservaciones--
SELECT reservacion.IDReser AS 'ID', reservacion.FechaInicio AS 'FechadeInicio', reservacion.DiasEstima 'Diasestimados',estado.Estado AS 'Estadoreservacion', tipohabitacion.TipoHabitacion as 'Tipodehabitacion' 
FROM reservacion INNER JOIN tipohabitacion ON tipohabitacion.ID=reservacion.Habitacion INNER JOIN estado ON estado.ID= reservacion.Estado 

--Personas reservacion--
SELECT visitante.Nombre as 'Nombres' FROM reservacion_visitante INNER JOIN reservacion ON reservacion.IDReser = reservacion_visitante.IDReser INNER join 
visitante on reservacion_visitante.IDVisi= visitante.IDVisi WHERE reservacion.IDReser= [Valor de la reservacion de la busqueda anterior]



Las demas sentencias seran:
- Ordenado por estado de la reservacion, de forma ascendente (Primero en Espera>En Progreso>Finalizado) y descendente (Finalizado>En Progreso> En Espera).

--ASC
SELECT reservacion.FechaInicio AS 'FechadeInicio', reservacion.DiasEstima 'Diasestimados',estado.Estado AS 'Estadoreservacion', tipohabitacion.TipoHabitacion as 'Tipodehabitacion' 
FROM reservacion INNER JOIN tipohabitacion ON tipohabitacion.ID=reservacion.Habitacion INNER JOIN estado ON estado.ID= reservacion.Estado order by Estado.Estado ASC 
--DESC
SELECT reservacion.FechaInicio AS 'FechadeInicio', reservacion.DiasEstima 'Diasestimados',estado.Estado AS 'Estadoreservacion', tipohabitacion.TipoHabitacion as 'Tipodehabitacion' 
FROM reservacion INNER JOIN tipohabitacion ON tipohabitacion.ID=reservacion.Habitacion INNER JOIN estado ON estado.ID= reservacion.Estado order by Estado.Estado DESC 



- Ordenado por fecha de inicio de la reservacion, de forma ascendente y descendente.
--ASC
SELECT reservacion.FechaInicio AS 'FechadeInicio', reservacion.DiasEstima 'Diasestimados',estado.Estado AS 'Estadoreservacion', tipohabitacion.TipoHabitacion as 'Tipodehabitacion' 
FROM reservacion INNER JOIN tipohabitacion ON tipohabitacion.ID=reservacion.Habitacion INNER JOIN estado ON estado.ID= reservacion.Estado order by reservacion.FechaInicio ASC 
--DESC
SELECT reservacion.FechaInicio AS 'FechadeInicio', reservacion.DiasEstima 'Diasestimados',estado.Estado AS 'Estadoreservacion', tipohabitacion.TipoHabitacion as 'Tipodehabitacion' 
FROM reservacion INNER JOIN tipohabitacion ON tipohabitacion.ID=reservacion.Habitacion INNER JOIN estado ON estado.ID= reservacion.Estado order by reservacion.FechaInicio DESC 



- Ordenado por Nombre de los visitantes, de forma ascendente y descendente.
--ASC
SELECT visitante.Nombre as 'Nombres'  
FROM reservacion_visitante INNER JOIN reservacion ON reservacion.IDReser = reservacion_visitante.IDReser INNER join visitante on reservacion_visitante.IDVisi= visitante.IDVisi 
WHERE reservacion.IDReser= valor a agregar ORDER BY visitante.Nombre ASC 
--DESC
SELECT visitante.Nombre as 'Nombres' 
FROM reservacion_visitante INNER JOIN reservacion ON reservacion.IDReser = reservacion_visitante.IDReser INNER join visitante on reservacion_visitante.IDVisi= visitante.IDVisi 
WHERE reservacion.IDReser= valor a agregar ORDER BY visitante.Nombre DESC 



- Ordenado por fecha de creacion, de forma ascendente (de la mas reciente a la mas vieja) y de forma descendente (de la mas vieja a la mas reciente).
--ASC
SELECT reservacion.FechaInicio AS 'FechadeInicio', reservacion.DiasEstima 'Diasestimados',estado.Estado AS 'Estadoreservacion', tipohabitacion.TipoHabitacion as 'Tipodehabitacion' 
FROM reservacion INNER JOIN tipohabitacion ON tipohabitacion.ID=reservacion.Habitacion INNER JOIN estado ON estado.ID= reservacion.Estado order by reservacion.FechaCreacion ASC 
--DESC
SELECT reservacion.FechaInicio AS 'FechadeInicio', reservacion.DiasEstima 'Diasestimados',estado.Estado AS 'Estadoreservacion', tipohabitacion.TipoHabitacion as 'Tipodehabitacion' 
FROM reservacion INNER JOIN tipohabitacion ON tipohabitacion.ID=reservacion.Habitacion INNER JOIN estado ON estado.ID= reservacion.Estado order by reservacion.FechaCreacion DESC 

>>>>>>REGLAS ESPECIFICAS DE LA BD<<<<<<<
ALTER TABLE usuario ADD CONSTRAINT CK_USUARIO_TipoUsuario CHECK (tipousuario in ('S','A','R'));
ALTER TABLE usuario ADD CONSTRAINT CK_USUARIOS_Nickname CHECK (nombre not LIKE '% %');
ALTER TABLE usuario ADD CONSTRAINT CK_USUARIOS_Correo CHECK (correo LIKE '%@%');
ALTER TABLE usuario ADD CONSTRAINT CK_USUARIOS_NoSymbols CHECK (clave REGEXP '^[A-Za-z0-9]+$');





ALTER TABLE visitante ADD CONSTRAINT CK_VisisTel_Num CHECK (telefono like '([0-9][0-9][0-9])[0-9][0-9][0-9]-[0-9][0-9][0-9][0-9]') 

----------------------------------------Sprint 1 Nueva BRANCH------------------------------------------------

-- Selec para visualizar los migrantes con el ordenamiento default de la fecha llegada descendente
SELECT visitante.Nombre as 'Nombre', visitante.Telefono as 'Telefono' , visitante.Fecha_nac as 'FechaNacimiento', nacionalidad.Pais as 'Pais', 
visitante.fecha_llegada AS 'FechaLlegada', visitante.hora_llegada as 'HoraLlegada', visitante.cita_consulado as "CitaConsulado" FROM visitante 
INNER join nacionalidad on nacionalidad.IDPais = visitante.IDNacion order by fecha_llegada DESC 
--Selects de Ordenamiento Fecha llegadaASC
SELECT visitante.Nombre as 'Nombre',visitante.Telefono as 'Telefono' , 
visitante.Fecha_nac as 'FechaNacimiento', nacionalidad.Pais as 'Pais', visitante.fecha_llegada AS 'FechaLlegada', visitante.hora_llegada as 'HoraLlegada', 
visitante.cita_consulado as "CitaConsulado" FROM visitante INNER join nacionalidad on nacionalidad.IDPais = visitante.IDNacion order by fecha_llegada ASC 

--Select de ordenamiento Fecha llegada DESC
SELECT visitante.Nombre as 'Nombre', visitante.Telefono as 'Telefono' , 
visitante.Fecha_nac as 'FechaNacimiento', nacionalidad.Pais as 'Pais', visitante.fecha_llegada AS 'FechaLlegada', visitante.hora_llegada as 'HoraLlegada', 
visitante.cita_consulado as "CitaConsulado" FROM visitante INNER join nacionalidad on nacionalidad.IDPais = visitante.IDNacion order by fecha_llegada DESC 

--Select de ordenamiento Nombre Asc
SELECT visitante.Nombre as 'Nombre', visitante.Telefono as 'Telefono' , 
visitante.Fecha_nac as 'FechaNacimiento', nacionalidad.Pais as 'Pais', visitante.fecha_llegada AS 'FechaLlegada', visitante.hora_llegada as 'HoraLlegada', 
visitante.cita_consulado as "CitaConsulado" FROM visitante INNER join nacionalidad on nacionalidad.IDPais = visitante.IDNacion order by Nombre asc 

--Select de Ordenamiento Nombre DESC
SELECT visitante.Nombre as 'Nombre', visitante.Telefono as 'Telefono' , 
visitante.Fecha_nac as 'FechaNacimiento', nacionalidad.Pais as 'Pais', visitante.fecha_llegada AS 'FechaLlegada', visitante.hora_llegada as 'HoraLlegada', 
visitante.cita_consulado as "CitaConsulado" FROM visitante INNER join nacionalidad on nacionalidad.IDPais = visitante.IDNacion order by Nombre DESC 

--Select de Ordenamiento Cita Consulado Asc
SELECT visitante.Nombre as 'Nombre', visitante.Telefono as 'Telefono' , 
visitante.Fecha_nac as 'FechaNacimiento', nacionalidad.Pais as 'Pais', visitante.fecha_llegada AS 'FechaLlegada', visitante.hora_llegada as 'HoraLlegada', 
visitante.cita_consulado as "CitaConsulado" FROM visitante INNER join nacionalidad on nacionalidad.IDPais = visitante.IDNacion order by cita_consulado ASC

--Select de Ordenamiento Cita Consulado Desc
SELECT visitante.Nombre as 'Nombre', visitante.Telefono as 'Telefono' , 
visitante.Fecha_nac as 'FechaNacimiento', nacionalidad.Pais as 'Pais', visitante.fecha_llegada AS 'FechaLlegada', visitante.hora_llegada as 'HoraLlegada', 
visitante.cita_consulado as "CitaConsulado" FROM visitante INNER join nacionalidad on nacionalidad.IDPais = visitante.IDNacion order by cita_consulado DESC

--Select Por Fechas Ultimos 6 meses 
SELECT visitante.Nombre as 'Nombre', visitante.Telefono as 'Telefono' , 
visitante.Fecha_nac as 'FechaNacimiento', nacionalidad.Pais as 'Pais', visitante.fecha_llegada AS 'FechaLlegada', visitante.hora_llegada as 'HoraLlegada', 
visitante.cita_consulado as "CitaConsulado" FROM visitante INNER join nacionalidad on nacionalidad.IDPais = visitante.IDNacion 
where fecha_llegada > curdate() - interval (dayofmonth(curdate()) - 1) day - interval 6 month order by fecha_llegada DESC 

--Select Por Fechas Ultimos 3 meses 
SELECT visitante.Nombre as 'Nombre', visitante.Telefono as 'Telefono' , 
visitante.Fecha_nac as 'FechaNacimiento', nacionalidad.Pais as 'Pais', visitante.fecha_llegada AS 'FechaLlegada', visitante.hora_llegada as 'HoraLlegada', 
visitante.cita_consulado as "CitaConsulado" FROM visitante INNER join nacionalidad on nacionalidad.IDPais = visitante.IDNacion 
where fecha_llegada > curdate() - interval (dayofmonth(curdate()) - 1) day - interval 3 month order by fecha_llegada DESC 

--Select Por Fechas Ultimos 1 meses 
SELECT visitante.Nombre as 'Nombre', visitante.Telefono as 'Telefono' , 
visitante.Fecha_nac as 'FechaNacimiento', nacionalidad.Pais as 'Pais', visitante.fecha_llegada AS 'FechaLlegada', visitante.hora_llegada as 'HoraLlegada', 
visitante.cita_consulado as "CitaConsulado" FROM visitante INNER join nacionalidad on nacionalidad.IDPais = visitante.IDNacion 
where fecha_llegada > curdate() - interval (dayofmonth(curdate()) - 1) day - interval 1 month order by fecha_llegada DESC 

--Select por ultimos 7 dias
SELECT visitante.Nombre as 'Nombre', visitante.Telefono as 'Telefono' , visitante.Fecha_nac as 'FechaNacimiento', nacionalidad.Pais as 'Pais', visitante.fecha_llegada AS 
'FechaLlegada', visitante.hora_llegada as 'HoraLlegada', visitante.cita_consulado as "CitaConsulado" FROM visitante INNER join nacionalidad on nacionalidad.IDPais = 
visitante.IDNacion where fecha_llegada > curdate() - interval (dayofmonth(curdate()) - 1) day - interval 1 week order by fecha_llegada DESC

---Editar Visitante
update visitante set Nombre='', Telefono='', Fecha_nac='', IDNacion='',fecha_llegada='',hora_llegada='',cita_consulado='', fecha_registro='' where Nombre=''
--Ejemplo
update visitante set Nombre='pepe', Telefono='6645842345', Fecha_nac='2014-01-08', IDNacion='Mex',fecha_llegada='2020-03-03',hora_llegada='2020-03-03 11:23:30', 
cita_consulado='2020-03-05 9:30:00', fecha_registro ='2020-03-01 12:32:23'WHERE Nombre='Rigoberto Balux Carrillo' 

---Editar Clave usuario
update usuario set Clave='' where ID= 
--Ejemplo
update usuario set Clave='nombre' where ID=3 

--Fecha Consul 3 dias
--- OJO ESTA PRIMER SENTENCIA MUESTRA LASRESERVACIONES, YA LA SEGUNDA MUESTRA LOS DATOS QUE PIDE EL EXCEL EXCEPTUANDO EL NUMERO DE CUARTO POR QUE ESA MODIFICACION AUN NO LA HACEMOS.----
SELECT reservacion.IDReser AS 'ID', reservacion.FechaInicio AS 'FechadeInicio',reservacion.Fechafin as 'FechaFin', reservacion.DiasEstima 'Diasestimados',estado.Estado AS 
'Estadoreservacion', tipohabitacion.TipoHabitacion as 'Tipodehabitacion' FROM reservacion INNER JOIN tipohabitacion ON tipohabitacion.ID=reservacion.Habitacion INNER JOIN 
estado ON estado.ID= reservacion.Estado where Fechafin BETWEEN curdate() and curdate() + interval 3 day 

SELECT reservacion.IDReser AS 'NumeroReservacion',reservacion.Fechafin as 'DiaSalida',visitante.cita_consulado as 'CitaConsulado',visitante.Nombre AS 'Nombre' FROM 
reservacion_visitante INNER JOIN reservacion ON reservacion.IDReser = reservacion_visitante.IDReser INNER join visitante on reservacion_visitante.IDVisi= visitante.IDVisi 
where Fechafin BETWEEN curdate() and curdate() + interval 3 day 

---Costo
Sentencia para tener las columnas autogeneradas
select NumPersonas,tipohabitacion,cobro,Precio,(PorcentajeDesc*100) as PorcentajeDesc,(PorcentajeDesc*Precio) AS Descuento,(Precio-(PorcentajeDesc*Precio)) AS Subtotal, 
((Precio-(PorcentajeDesc*Precio))*.13) AS Impuesto, ((Precio-(PorcentajeDesc*Precio))*1.13) AS Total FROM costo 

--- Editar costo
UPDATE costo SET NumPersonas='',tipohabitacion='',cobro='',Precio='',PorcentajeDesc='' WHERE condicion

[NumPersonas = Numero de personas que permite el cuarto, el tipo es int.]
[tipohabitacion = Es el tipo de habitacion que es, el tipo es VARCHAR.]
[cobro = Tipo de costo que tendra la habitacion, tipo VARCHAR]
[Precio = Es el costo de la habitacion, tipo float.]
[PorcentajeDesc = Es el porcentaje de descuento que tendra el costo, tipo float.]



CREAR RESERVACION MANUALMENTE

>>>>>SENTENCIAS SQL PARA LA INSERCION DE DATOS AL CREAR RESERVACION<<<<<< (Sprint Administrador)
Las siguientes sentencias se ejecutaran cuando el usuario da clic al boton "Crear reservacion"

-> INSERT INTO `reservacion` ( `FechaInicio`, `Fechafin`, `DiasEstima`, `Creacion`, `Habitacion`, `Estado`, `NumHabitacion`) values (,,,,,,);
[FechaInicio = Es la fecha de la reservacion de inicio, el tipo es DATE.]
[FechaInicio = Es la fecha donde termina la reservacion, el tipo es DATE.]
[DiasEstimados = Noches del hotel, tipo INT]
[Creacion = Es la fecha de creacion de la reservacion, tipo DATE.]
[Habitacion = Tipo de habitacion, tipo CHAR, S ,D y T.]
[Estado = Se refiere al estado de la habitacion, tipo CHAR, al crear la reservacion este campo es "E".]
[NumHabitacion = Se refiere al numero de habitacion en donde se estan hospedando, es tipo de dato CHAR, por lo que se capeara en el front o back para que solo ingrese numeros.]

-->Ejemplo


INSERT INTO `reservacion` ( `FechaInicio`, `Fechafin`, `DiasEstima`, `Creacion`, `Habitacion`, `Estado`, `NumHabitacion`) VALUES ( '2020-08-26', '2020-08-29', '4', '2020-08-10', 'D', 'E', '205');



-> insert into visitante (Nombre, Telefono, Fecha_nac, IDNacion,`fecha_llegada`, `hora_llegada`, `cita_consulado`, `fecha_registro`) values (,,,,,,);
{ESTA SENTENCIA SE EJECUTA TANTAS VECES VISITANTES ESTEN SIENDO REGISTRADOS EN LA RESERVACION}
[Nombre = Nombre con apellidos del hospedado, tipo varchar]
[Telefono = Telefono del visitante, el formato debe ser (000)000-0000]
[Fecha_nac = Tipo DATE]
[IDNacion = Es la nacionalidad del visitante, el tipo de dato es varchar de 3 caracteres, el dato ingresado debe ser como NIC, MEX, HON...]
[Fecha_llegada = Es el dia en que llegara al hotel, tipo date]
[hora_llegada = La hora en la que debe de estar en el hotel, tipo datetime]
[cita_consulado= Es el dia y la hora en la que tiene la cita en el consulado, tipo datetime]
[Fecha_llegada = Es el dia y la hora en la que registraron al visitante en la asociacion, tipo datetime]

-->Ejemplo
INSERT INTO `visitante` (`Nombre`, `Telefono`, `Fecha_nac`, `IDNacion`, `fecha_llegada`, `hora_llegada`, `cita_consulado`, `fecha_registro`) VALUES 
( 'Jaime Carrillo Ramos', '6644953708', '2020-08-02', 'BOL', '2020-08-12', '16:14:00', '11:20:00', '2020-08-10 00:00:00');


--> insert into reservacion_visitante (IDReser, IDVisi) values (,);
{ESTA SENTENCIA SE EJECUTA TANTAS VECES COMO VISITANTES SE HAYAN ENLAZADO A LA RESERVACION QUE SE CREO, INTERCALANDO EL ID DEL VISITANTE}
[IDReserv = Es el ID de la reservacion que acabamos de crear]
[IDVisi = Es el ID deL visitante que se creo junto con la reservacion recien creada.]

-->Ejemplo
INSERT INTO `reservacion_visitante` ( `IDReser`, `IDVisi`) VALUES ( '1', '1');

COMBOBOX CON EL TIPO DE HABITACION
select tipohabitacion FROM tipohabitacion 


ELIMINAR VISITANTE DE LA RESERVACION

DELETE from reservacion_visitante where IDVisi ='1' 
Se eliminara de la reservacion el visitante por medio de su id

EJEMPLO
DELETE from reservacion_visitante where IDVisi ='1' 